{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\nimport './Mapresult.scss';\nvar TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\nvar navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nvar Mapresult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mapresult, _Component);\n\n  function Mapresult(props) {\n    var _this;\n\n    _classCallCheck(this, Mapresult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mapresult).call(this, props));\n\n    _this.updateViewport = function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.renderCityMarker = function (resto, index) {\n      var popoverOpen = _this.state.popoverOpen;\n      return React.createElement(\"div\", {\n        key: \"marker-\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        longitude: resto.lon,\n        latitude: resto.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"buttonicone\",\n        id: \"Popover-\".concat(resto.index),\n        onClick: _this.togglePin,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"medias/icone-easylunch-orange.png\",\n        alt: \"icone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: popoverOpen,\n        target: \"Popover-\".concat(resto.index),\n        toggle: _this.togglePin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, resto.titre))));\n    };\n\n    _this.state = {\n      activeTab: '1',\n      viewport: {\n        latitude: 44.8333,\n        longitude: -0.5667,\n        zoom: 14,\n        bearing: 0,\n        pitch: 0\n      },\n      popoverOpen: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePin = _this.togglePin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateViewport = _this.updateViewport.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderCityMarker = _this.renderCityMarker.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Mapresult, [{\n    key: \"toggle\",\n    value: function toggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"togglePin\",\n    value: function togglePin() {\n      var popoverOpen = this.state.popoverOpen;\n      this.setState({\n        popoverOpen: !popoverOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var restos = [{\n        titre: 'Cromagnon',\n        lat: 44.84328199999999,\n        lon: -0.5813342000000148\n      }, {\n        titre: 'Le resto d\\'Ysis',\n        lat: 44.92419639999999,\n        lon: -0.6231397999999899\n      }, {\n        titre: 'Le monologue',\n        lat: 44.84287820000001,\n        lon: -0.5816670000000386\n      }];\n      var activeTab = this.state.activeTab;\n      var viewport = this.state.viewport;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Carte\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Menu\"))), React.createElement(TabContent, {\n        activeTab: activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(MapGL, Object.assign({}, viewport, {\n        width: \"100%\",\n        height: \"650px\",\n        mapStyle: \"mapbox://styles/mapbox/light-v9\",\n        onViewportChange: this.updateViewport,\n        mapboxApiAccessToken: TOKEN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), restos.map(function (resto, index) {\n        return _this2.renderCityMarker(resto, index);\n      }), React.createElement(\"div\", {\n        className: \"nav\",\n        style: navStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(NavigationControl, {\n        onViewportChange: this.updateViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Special Title Treatment\"), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Text\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Go somewhere\")))))));\n    }\n  }]);\n\n  return Mapresult;\n}(Component);\n\nexport default Mapresult;","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx"],"names":["React","Component","MapGL","Marker","Popup","NavigationControl","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","Popover","PopoverBody","classnames","TOKEN","navStyle","position","top","left","padding","Mapresult","props","updateViewport","viewport","setState","renderCityMarker","resto","index","popoverOpen","state","lon","lat","togglePin","titre","activeTab","latitude","longitude","zoom","bearing","pitch","toggle","bind","tab","restos","active","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  Button,\n  CardTitle,\n  CardText,\n  Row,\n  Col,\n  Popover,\n  PopoverBody,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport './Mapresult.scss';\n\n\nconst TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px',\n};\n\nclass Mapresult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      viewport: {\n        latitude: 44.8333,\n        longitude: -0.5667,\n        zoom: 14,\n        bearing: 0,\n        pitch: 0,\n      },\n      popoverOpen: false,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.togglePin = this.togglePin.bind(this);\n    this.updateViewport = this.updateViewport.bind(this);\n    this.renderCityMarker = this.renderCityMarker.bind(this);\n  }\n\n\n  updateViewport = (viewport) => {\n    this.setState({ viewport });\n  }\n\n  renderCityMarker = (resto, index) => {\n    const { popoverOpen } = this.state;\n    return (\n      <div key={`marker-${index}`}>\n        <Marker\n          longitude={resto.lon}\n          latitude={resto.lat}\n        >\n          <button className=\"buttonicone\" id={`Popover-${resto.index}`} onClick={this.togglePin} type=\"button\">\n            <img src=\"medias/icone-easylunch-orange.png\" alt=\"icone\" />\n          </button>\n          <Popover placement=\"bottom\" isOpen={popoverOpen} target={`Popover-${resto.index}`} toggle={this.togglePin}>\n            <PopoverBody>{resto.titre}</PopoverBody>\n          </Popover>\n        </Marker>\n      </div>\n    );\n  }\n\n  toggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  togglePin() {\n    const { popoverOpen } = this.state;\n    this.setState({\n      popoverOpen: !popoverOpen,\n    });\n  }\n\n  render() {\n    const restos = [\n      { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n      { titre: 'Le resto d\\'Ysis', lat: 44.92419639999999, lon: -0.6231397999999899 },\n      { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n    ];\n    const {\n      activeTab,\n    } = this.state;\n    const { viewport } = this.state;\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Carte\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Menu\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <MapGL\n                  {...viewport}\n                  width=\"100%\"\n                  height=\"650px\"\n                  mapStyle=\"mapbox://styles/mapbox/light-v9\"\n                  onViewportChange={this.updateViewport}\n                  mapboxApiAccessToken={TOKEN}\n                >\n\n                  { restos.map((resto, index) => this.renderCityMarker(resto, index)) }\n\n                  <div className=\"nav\" style={navStyle}>\n                    <NavigationControl onViewportChange={this.updateViewport} />\n                  </div>\n\n                </MapGL>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <CardTitle>Special Title Treatment</CardTitle>\n                  <CardText>Text</CardText>\n                  <Button>Go somewhere</Button>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Mapresult;\n"]},"metadata":{},"sourceType":"module"}
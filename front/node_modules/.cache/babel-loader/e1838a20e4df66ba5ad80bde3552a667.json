{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _readOnlyError from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/src/components/result/Map.jsx\";\nimport React, { Component } from 'react';\nimport './Map.scss'; // On initialise la latitude et la longitude de Bordeaux (centre de la carte)\n\nvar lat = 44.836151;\nvar lon = -0.580816;\nvar macarte = null; // Nous initialisons une liste de marqueurs\n\nvar restos = [{\n  titre: 'Cromagnon',\n  lat: 44.84328199999999,\n  lon: -0.5813342000000148\n}, {\n  titre: 'Le resto d\\'Ysis',\n  lat: 44.92419639999999,\n  lon: -0.6231397999999899\n}, {\n  titre: 'Le monologue',\n  lat: 44.84287820000001,\n  lon: -0.5816670000000386\n}];\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var initMap = this.props.initMap;\n      initMap();\n    }\n  }, {\n    key: \"initMap\",\n    value: function initMap() {\n      var iconBase = 'https://i.postimg.cc/jjg8Hyw1/icone-easylunch-orange.png'; // Créer l'objet \"macarte\" et l'insèrer dans l'élément HTML qui a l'ID \"map\"\n\n      macarte = (_readOnlyError(\"macarte\"), L.map('map').setView([lat, lon], 11)); // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr\n\n      L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {\n        // Il est toujours bien de laisser le lien vers la source des données\n        attribution: 'données © <a href=\"//osm.org/copyright\">OpenStreetMap</a>/ODbL - rendu <a href=\"//openstreetmap.fr\">OSM France</a>',\n        minZoom: 1,\n        maxZoom: 20\n      }).addTo(macarte); // Nous parcourons la liste des villes\n\n      for (resto in restos) {\n        // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)\n        var myIcon = L.icon({\n          iconUrl: \"\".concat(iconBase, \"autres.png\"),\n          iconSize: [30, 30],\n          iconAnchor: [25, 50],\n          popupAnchor: [-3, -76]\n        });\n        var marker = L.marker([restos[resto].lat, restos[resto].lon], {\n          icon: myIcon\n        }).addTo(macarte);\n        marker.bindPopup(resto);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/src/components/result/Map.jsx"],"names":["React","Component","lat","lon","macarte","restos","titre","Map","initMap","props","iconBase","L","map","setView","tileLayer","attribution","minZoom","maxZoom","addTo","resto","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","marker","bindPopup"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP,C,CAEA;;AACA,IAAMC,GAAG,GAAG,SAAZ;AACA,IAAMC,GAAG,GAAG,CAAC,QAAb;AACA,IAAMC,OAAO,GAAG,IAAhB,C,CACA;;AACA,IAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBJ,EAAAA,GAAG,EAAE,iBAA3B;AAA8CC,EAAAA,GAAG,EAAE,CAAC;AAApD,CADa,EAEb;AAAEG,EAAAA,KAAK,EAAE,kBAAT;AAA6BJ,EAAAA,GAAG,EAAE,iBAAlC;AAAqDC,EAAAA,GAAG,EAAE,CAAC;AAA3D,CAFa,EAGb;AAAEG,EAAAA,KAAK,EAAE,cAAT;AAAyBJ,EAAAA,GAAG,EAAE,iBAA9B;AAAiDC,EAAAA,GAAG,EAAE,CAAC;AAAvD,CAHa,CAAf;;IAOMI,G;;;;;;;;;;;;;wCACgB;AAAA,UACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;AAElBA,MAAAA,OAAO;AACR;;;8BAES;AACR,UAAME,QAAQ,GAAG,0DAAjB,CADQ,CAER;;AACAN,MAAAA,OAAO,+BAAGO,CAAC,CAACC,GAAF,CAAM,KAAN,EAAaC,OAAb,CAAqB,CAACX,GAAD,EAAMC,GAAN,CAArB,EAAiC,EAAjC,CAAH,CAAP,CAHQ,CAIR;;AACAQ,MAAAA,CAAC,CAACG,SAAF,CAAY,yDAAZ,EAAuE;AACrE;AACAC,QAAAA,WAAW,EAAE,oHAFwD;AAGrEC,QAAAA,OAAO,EAAE,CAH4D;AAIrEC,QAAAA,OAAO,EAAE;AAJ4D,OAAvE,EAKGC,KALH,CAKSd,OALT,EALQ,CAWR;;AACA,WAAKe,KAAL,IAAcd,MAAd,EAAsB;AACpB;AACA,YAAMe,MAAM,GAAGT,CAAC,CAACU,IAAF,CAAO;AACpBC,UAAAA,OAAO,YAAKZ,QAAL,eADa;AAEpBa,UAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFU;AAGpBC,UAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAHQ;AAIpBC,UAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN;AAJO,SAAP,CAAf;AAMA,YAAMC,MAAM,GAAGf,CAAC,CAACe,MAAF,CAAS,CAACrB,MAAM,CAACc,KAAD,CAAN,CAAcjB,GAAf,EAAoBG,MAAM,CAACc,KAAD,CAAN,CAAchB,GAAlC,CAAT,EAAiD;AAAEkB,UAAAA,IAAI,EAAED;AAAR,SAAjD,EAAmEF,KAAnE,CAAyEd,OAAzE,CAAf;AACAsB,QAAAA,MAAM,CAACC,SAAP,CAAiBR,KAAjB;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;;;EArCelB,S;;AAwClB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Map.scss';\n\n// On initialise la latitude et la longitude de Bordeaux (centre de la carte)\nconst lat = 44.836151;\nconst lon = -0.580816;\nconst macarte = null;\n// Nous initialisons une liste de marqueurs\nconst restos = [\n  { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n  { titre: 'Le resto d\\'Ysis', lat: 44.92419639999999, lon: -0.6231397999999899 },\n  { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n];\n\nclass Map extends Component {\n  componentDidMount() {\n    const { initMap } = this.props;\n    initMap();\n  }\n\n  initMap() {\n    const iconBase = 'https://i.postimg.cc/jjg8Hyw1/icone-easylunch-orange.png';\n    // Créer l'objet \"macarte\" et l'insèrer dans l'élément HTML qui a l'ID \"map\"\n    macarte = L.map('map').setView([lat, lon], 11);\n    // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {\n      // Il est toujours bien de laisser le lien vers la source des données\n      attribution: 'données © <a href=\"//osm.org/copyright\">OpenStreetMap</a>/ODbL - rendu <a href=\"//openstreetmap.fr\">OSM France</a>',\n      minZoom: 1,\n      maxZoom: 20,\n    }).addTo(macarte);\n    // Nous parcourons la liste des villes\n    for (resto in restos) {\n      // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)\n      const myIcon = L.icon({\n        iconUrl: `${iconBase}autres.png`,\n        iconSize: [30, 30],\n        iconAnchor: [25, 50],\n        popupAnchor: [-3, -76],\n      });\n      const marker = L.marker([restos[resto].lat, restos[resto].lon], { icon: myIcon }).addTo(macarte);\n      marker.bindPopup(resto);\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"map\">\n\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
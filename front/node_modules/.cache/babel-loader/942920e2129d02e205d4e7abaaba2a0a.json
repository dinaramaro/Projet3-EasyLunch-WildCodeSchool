{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/front/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport RestoPin from '../../components/result/resto-pin';\nimport RestoInfo from '../../components/result/resto-info';\nvar TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\nvar navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\nvar restos = [{\n  titre: 'Cromagnon',\n  lat: 44.84328199999999,\n  lon: -0.5813342000000148\n}, {\n  titre: 'Le monologue',\n  lat: 44.84287820000001,\n  lon: -0.5816670000000386\n}];\n\nvar Mapresult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mapresult, _Component);\n\n  function Mapresult(props) {\n    var _this;\n\n    _classCallCheck(this, Mapresult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mapresult).call(this, props));\n\n    _this.updateViewport = function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.renderCityMarker = function (resto, index) {\n      return React.createElement(Marker, {\n        key: \"marker-\".concat(index),\n        longitude: resto.lon,\n        latitude: resto.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(RestoPin, {\n        size: 45,\n        onClick: function onClick() {\n          return _this.setState({\n            popupInfo: resto\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      viewport: {},\n      popupInfo: null,\n      activeTab: '1'\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Mapresult, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        _this2.setState({\n          viewport: {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            zoom: 12,\n            bearing: 0,\n            pitch: 0\n          }\n        });\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"renderPopup\",\n    value: function renderPopup() {\n      var _this3 = this;\n\n      var popupInfo = this.state.popupInfo;\n      return popupInfo && React.createElement(Popup, {\n        tipSize: 10,\n        anchor: \"top\",\n        longitude: popupInfo.lon,\n        latitude: popupInfo.lat,\n        onClose: function onClose() {\n          return _this3.setState({\n            popupInfo: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(RestoInfo, {\n        info: popupInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          viewport = _this$state.viewport,\n          activeTab = _this$state.activeTab;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Carte\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this4.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Menu\"))), React.createElement(TabContent, {\n        activeTab: activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(MapGL, Object.assign({\n        className: \"Mapresult\"\n      }, viewport, {\n        width: \"100%\",\n        height: \"650px\",\n        mapStyle: \"mapbox://styles/mapbox/light-v9\",\n        onViewportChange: this.updateViewport,\n        mapboxApiAccessToken: TOKEN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), restos.map(this.renderCityMarker), this.renderPopup(), React.createElement(\"div\", {\n        className: \"nav\",\n        style: navStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(NavigationControl, {\n        onViewportChange: this.updateViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Special Title Treatment\"), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Text\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Go somewhere\")))))));\n    }\n  }]);\n\n  return Mapresult;\n}(Component);\n\nexport default Mapresult;","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/front/src/containers/result/Mapresult.jsx"],"names":["React","Component","MapGL","Marker","Popup","NavigationControl","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","classnames","RestoPin","RestoInfo","TOKEN","navStyle","position","top","left","padding","restos","titre","lat","lon","Mapresult","props","updateViewport","viewport","setState","renderCityMarker","resto","index","popupInfo","state","activeTab","toggle","bind","navigator","geolocation","getCurrentPosition","pos","latitude","coords","longitude","zoom","bearing","pitch","tab","active","map","renderPopup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport RestoPin from '../../components/result/resto-pin';\nimport RestoInfo from '../../components/result/resto-info';\n\nconst TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px',\n};\n\nconst restos = [\n  { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n  { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n];\n\n\nclass Mapresult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {},\n      popupInfo: null,\n      activeTab: '1',\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      this.setState(\n        {\n          viewport: {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            zoom: 12,\n            bearing: 0,\n            pitch: 0,\n          },\n        },\n      );\n    });\n  }\n\n  updateViewport = (viewport) => {\n    this.setState({ viewport });\n  }\n\n  toggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  renderCityMarker = (resto, index) => (\n    <Marker\n      key={`marker-${index}`}\n      longitude={resto.lon}\n      latitude={resto.lat}\n    >\n      <RestoPin size={45} onClick={() => this.setState({ popupInfo: resto })} />\n    </Marker>\n  )\n\n  renderPopup() {\n    const { popupInfo } = this.state;\n\n    return popupInfo && (\n      <Popup\n        tipSize={10}\n        anchor=\"top\"\n        longitude={popupInfo.lon}\n        latitude={popupInfo.lat}\n        onClose={() => this.setState({ popupInfo: null })}\n      >\n        <RestoInfo info={popupInfo} />\n      </Popup>\n    );\n  }\n\n  render() {\n    const {\n      viewport,\n      activeTab,\n    } = this.state;\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Carte\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Menu\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <MapGL\n                  className=\"Mapresult\"\n                  {...viewport}\n                  width=\"100%\"\n                  height=\"650px\"\n                  mapStyle=\"mapbox://styles/mapbox/light-v9\"\n                  onViewportChange={this.updateViewport}\n                  mapboxApiAccessToken={TOKEN}\n                >\n\n                  {restos.map(this.renderCityMarker)}\n\n                  {this.renderPopup()}\n\n                  <div className=\"nav\" style={navStyle}>\n                    <NavigationControl onViewportChange={this.updateViewport} />\n                  </div>\n\n                </MapGL>\n\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <CardTitle>Special Title Treatment</CardTitle>\n                  <CardText>Text</CardText>\n                  <Button>Go somewhere</Button>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Mapresult;\n"]},"metadata":{},"sourceType":"module"}
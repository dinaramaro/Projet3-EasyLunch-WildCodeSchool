{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.onMarkerClick = function (props, marker) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var restos = [{\n        titre: 'Cromagnon',\n        lat: 44.84328199999999,\n        lon: -0.5813342000000148\n      }, {\n        titre: 'Le resto d\\'Ysis',\n        lat: 44.92419639999999,\n        lon: -0.6231397999999899\n      }, {\n        titre: 'Le monologue',\n        lat: 44.84287820000001,\n        lon: -0.5816670000000386\n      }];\n      var google = this.props.google;\n      var _this$state = this.state,\n          activeMarker = _this$state.activeMarker,\n          showingInfoWindow = _this$state.showingInfoWindow,\n          selectedPlace = _this$state.selectedPlace;\n      return React.createElement(Map, {\n        className: \"Map\",\n        google: google,\n        initialCenter: {\n          lat: 44.8333,\n          lng: -0.5667\n        },\n        zoom: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, restos.map(function (resto) {\n        return React.createElement(Marker, {\n          onClick: _this2.onMarkerClick,\n          title: resto.titre,\n          name: resto.titre,\n          position: {\n            lat: resto.lat,\n            lng: resto.lon\n          },\n          icon: {\n            url: '/medias/icone-easylunch-orange.png',\n            anchor: new google.maps.Point(32, 32),\n            scaledSize: new google.maps.Size(32, 32)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }), React.createElement(InfoWindow, {\n        marker: activeMarker,\n        visible: showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCw4BDF4tiB6uOlcLajsnkFlc3iek2d8HM'\n})(MapContainer);","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","props","onMarkerClick","marker","setState","selectedPlace","activeMarker","showingInfoWindow","state","restos","titre","lat","lon","google","lng","map","resto","url","anchor","maps","Point","scaledSize","Size","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Map, InfoWindow, Marker, GoogleApiWrapper,\n} from 'google-maps-react';\n\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n  }\n\n  onMarkerClick = (props, marker) => this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true,\n  });\n\n  render() {\n    const restos = [\n      { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n      { titre: 'Le resto d\\'Ysis', lat: 44.92419639999999, lon: -0.6231397999999899 },\n      { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n    ];\n    const { google } = this.props;\n    const { activeMarker, showingInfoWindow, selectedPlace } = this.state;\n    return (\n      <Map\n        className=\"Map\"\n        google={google}\n        initialCenter={{\n          lat: 44.8333,\n          lng: -0.5667,\n        }}\n        zoom={16}\n      >\n        {restos.map(resto => (\n          <Marker\n            onClick={this.onMarkerClick}\n            title={resto.titre}\n            name={resto.titre}\n            position={{ lat: resto.lat, lng: resto.lon }}\n            icon={{\n              url: '/medias/icone-easylunch-orange.png',\n              anchor: new google.maps.Point(32, 32),\n              scaledSize: new google.maps.Size(32, 32),\n            }}\n          />\n        ))}\n        <InfoWindow\n          marker={activeMarker}\n          visible={showingInfoWindow}\n        >\n          <div>\n            <h1>{selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyCw4BDF4tiB6uOlcLajsnkFlc3iek2d8HM'),\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}
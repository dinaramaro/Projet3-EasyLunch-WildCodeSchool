{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/front/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport RestoPin from '../../components/result/resto-pin';\nimport RestoInfo from '../../components/result/resto-info';\nvar TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\nvar navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\nvar restos = [{\n  titre: 'Cromagnon',\n  lat: 44.84328199999999,\n  lon: -0.5813342000000148\n}, {\n  titre: 'Le monologue',\n  lat: 44.84287820000001,\n  lon: -0.5816670000000386\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.updateViewport = function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.renderCityMarker = function (resto, index) {\n      return React.createElement(Marker, {\n        key: \"marker-\".concat(index),\n        longitude: resto.lon,\n        latitude: resto.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(RestoPin, {\n        size: 45,\n        onClick: function onClick() {\n          return _this.setState({\n            popupInfo: resto\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      viewport: {},\n      popupInfo: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        _this2.setState({\n          viewport: {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            zoom: 12,\n            bearing: 0,\n            pitch: 0\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderPopup\",\n    value: function renderPopup() {\n      var _this3 = this;\n\n      var popupInfo = this.state.popupInfo;\n      return popupInfo && React.createElement(Popup, {\n        tipSize: 10,\n        anchor: \"top\",\n        longitude: popupInfo.lon,\n        latitude: popupInfo.lat,\n        onClose: function onClose() {\n          return _this3.setState({\n            popupInfo: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(RestoInfo, {\n        info: popupInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      return React.createElement(MapGL, Object.assign({\n        className: \"Mapresult\"\n      }, viewport, {\n        width: \"100%\",\n        height: \"650px\",\n        mapStyle: \"mapbox://styles/mapbox/light-v9\",\n        onViewportChange: this.updateViewport,\n        mapboxApiAccessToken: TOKEN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), restos.map(this.renderCityMarker), this.renderPopup(), React.createElement(\"div\", {\n        className: \"nav\",\n        style: navStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(NavigationControl, {\n        onViewportChange: this.updateViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nexport function renderToDom(container) {\n  render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), container);\n}","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/front/src/containers/result/Mapresult.jsx"],"names":["React","Component","render","MapGL","Marker","Popup","NavigationControl","RestoPin","RestoInfo","TOKEN","navStyle","position","top","left","padding","restos","titre","lat","lon","App","props","updateViewport","viewport","setState","renderCityMarker","resto","index","popupInfo","state","navigator","geolocation","getCurrentPosition","pos","latitude","coords","longitude","zoom","bearing","pitch","map","renderPopup","renderToDom","container"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport MapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\n\nimport RestoPin from '../../components/result/resto-pin';\nimport RestoInfo from '../../components/result/resto-info';\n\nconst TOKEN = 'pk.eyJ1IjoiY3RyaSIsImEiOiJjanAyaXV1OGcwNzJpM3dwaDhwejJvZjJnIn0.bVruUQb_cXzaHLyWmk1zSg';\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px',\n};\n\nconst restos = [\n  { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n  { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n];\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {},\n      popupInfo: null,\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      this.setState(\n        {\n          viewport: {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            zoom: 12,\n            bearing: 0,\n            pitch: 0,\n          },\n        },\n      );\n    });\n  }\n\n\n  updateViewport = (viewport) => {\n    this.setState({ viewport });\n  }\n\n\n  renderCityMarker = (resto, index) => (\n    <Marker\n      key={`marker-${index}`}\n      longitude={resto.lon}\n      latitude={resto.lat}\n    >\n      <RestoPin size={45} onClick={() => this.setState({ popupInfo: resto })} />\n    </Marker>\n  )\n\n  renderPopup() {\n    const { popupInfo } = this.state;\n\n    return popupInfo && (\n      <Popup\n        tipSize={10}\n        anchor=\"top\"\n        longitude={popupInfo.lon}\n        latitude={popupInfo.lat}\n        onClose={() => this.setState({ popupInfo: null })}\n      >\n        <RestoInfo info={popupInfo} />\n      </Popup>\n    );\n  }\n\n  render() {\n    const { viewport } = this.state;\n\n    return (\n      <MapGL\n        className=\"Mapresult\"\n        {...viewport}\n        width=\"100%\"\n        height=\"650px\"\n        mapStyle=\"mapbox://styles/mapbox/light-v9\"\n        onViewportChange={this.updateViewport}\n        mapboxApiAccessToken={TOKEN}\n      >\n\n        { restos.map(this.renderCityMarker) }\n\n        {this.renderPopup()}\n\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl onViewportChange={this.updateViewport} />\n        </div>\n\n      </MapGL>\n    );\n  }\n}\n\nexport function renderToDom(container) {\n  render(<App />, container);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nvar style = {\n  width: '100%',\n  height: '650px'\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.onMarkerClick = function (props, marker) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      activeTab: '1'\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"toggle\",\n    value: function toggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var restos = [{\n        titre: 'Cromagnon',\n        lat: 44.84328199999999,\n        lon: -0.5813342000000148\n      }, {\n        titre: 'Le resto d\\'Ysis',\n        lat: 44.92419639999999,\n        lon: -0.6231397999999899\n      }, {\n        titre: 'Le monologue',\n        lat: 44.84287820000001,\n        lon: -0.5816670000000386\n      }];\n      var google = this.props.google;\n      var _this$state = this.state,\n          activeMarker = _this$state.activeMarker,\n          showingInfoWindow = _this$state.showingInfoWindow,\n          selectedPlace = _this$state.selectedPlace,\n          activeTab = _this$state.activeTab;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Carte\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Menu\"))), React.createElement(TabContent, {\n        activeTab: activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: style,\n        google: google,\n        initialCenter: {\n          lat: 44.8333,\n          lng: -0.5667\n        },\n        zoom: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, restos.map(function (resto) {\n        return React.createElement(Marker, {\n          onClick: _this2.onMarkerClick,\n          title: resto.titre,\n          name: resto.titre,\n          position: {\n            lat: resto.lat,\n            lng: resto.lon\n          },\n          icon: {\n            url: '/medias/icone-easylunch-orange.png',\n            anchor: new google.maps.Point(32, 32),\n            scaledSize: new google.maps.Size(32, 32)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }), React.createElement(InfoWindow, {\n        marker: activeMarker,\n        visible: showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, selectedPlace.name))))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Special Title Treatment\"), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Text\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Go somewhere\")))))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCw4BDF4tiB6uOlcLajsnkFlc3iek2d8HM'\n})(MapContainer);","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","classnames","style","width","height","MapContainer","props","onMarkerClick","marker","setState","selectedPlace","activeMarker","showingInfoWindow","state","activeTab","toggle","bind","tab","restos","titre","lat","lon","google","active","lng","map","resto","url","anchor","maps","Point","scaledSize","Size","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Map, InfoWindow, Marker, GoogleApiWrapper,\n} from 'google-maps-react';\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col,\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nconst style = {\n  width: '100%',\n  height: '650px',\n};\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      activeTab: '1',\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  onMarkerClick = (props, marker) => this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true,\n  });\n\n  toggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  render() {\n    const restos = [\n      { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n      { titre: 'Le resto d\\'Ysis', lat: 44.92419639999999, lon: -0.6231397999999899 },\n      { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n    ];\n    const { google } = this.props;\n    const {\n      activeMarker, showingInfoWindow, selectedPlace, activeTab,\n    } = this.state;\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Carte\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Menu\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Map\n                  style={style}\n                  google={google}\n                  initialCenter={{\n                    lat: 44.8333,\n                    lng: -0.5667,\n                  }}\n                  zoom={16}\n                >\n                  {restos.map(resto => (\n                    <Marker\n                      onClick={this.onMarkerClick}\n                      title={resto.titre}\n                      name={resto.titre}\n                      position={{ lat: resto.lat, lng: resto.lon }}\n                      icon={{\n                        url: '/medias/icone-easylunch-orange.png',\n                        anchor: new google.maps.Point(32, 32),\n                        scaledSize: new google.maps.Size(32, 32),\n                      }}\n                    />\n                  ))}\n                  <InfoWindow\n                    marker={activeMarker}\n                    visible={showingInfoWindow}\n                  >\n                    <div>\n                      <h1>{selectedPlace.name}</h1>\n                    </div>\n                  </InfoWindow>\n                </Map>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <CardTitle>Special Title Treatment</CardTitle>\n                  <CardText>Text</CardText>\n                  <Button>Go somewhere</Button>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyCw4BDF4tiB6uOlcLajsnkFlc3iek2d8HM'),\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/bordeaux-0918-js-easylunch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx\";\nimport React, { Component } from 'react';\nimport './Mapresult.scss';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nvar iconBase = '/medias/icone-easylunch-orange.png'; // Nous initialisons une liste de marqueurs\n\nvar restos = [{\n  titre: 'Cromagnon',\n  lat: 44.84328199999999,\n  lon: -0.5813342000000148\n}, {\n  titre: 'Le resto d\\'Ysis',\n  lat: 44.92419639999999,\n  lon: -0.6231397999999899\n}, {\n  titre: 'Le monologue',\n  lat: 44.84287820000001,\n  lon: -0.5816670000000386\n}];\n\nvar Mapresult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mapresult, _Component);\n\n  function Mapresult(props) {\n    var _this;\n\n    _classCallCheck(this, Mapresult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mapresult).call(this, props));\n    _this.state = {\n      liste: []\n    };\n    return _this;\n  }\n\n  _createClass(Mapresult, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        liste: restos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var liste = this.state.liste;\n      var icone = new L.Icon({\n        iconUrl: iconBase,\n        iconRetinaUrl: iconBase,\n        iconAnchor: iconBase,\n        popupAnchor: null,\n        shadowUrl: iconBase,\n        shadowSize: null,\n        shadowAnchor: null,\n        iconSize: new L.Point(100, 100),\n        className: 'leaflet-div-icon'\n      });\n      console.log(icone);\n      return React.createElement(Map, {\n        className: \"Map\",\n        center: [44.8333, -0.5667],\n        zoom: 17,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), liste.map(function (resto) {\n        return React.createElement(Marker, {\n          key: resto.titre,\n          position: [resto.lon, resto.lat],\n          icon: icone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, resto.titre));\n      }));\n    }\n  }]);\n\n  return Mapresult;\n}(Component);\n\nexport default Mapresult;","map":{"version":3,"sources":["/home/wilder/bordeaux-0918-js-easylunch/src/containers/result/Mapresult.jsx"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","iconBase","restos","titre","lat","lon","Mapresult","props","state","liste","setState","icone","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","className","console","log","map","resto"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,SACEC,GADF,EACOC,SADP,EACkBC,MADlB,EAC0BC,KAD1B,QAEO,eAFP;AAGA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AAEA,IAAMC,QAAQ,GAAG,oCAAjB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,GAAG,EAAE,iBAA3B;AAA8CC,EAAAA,GAAG,EAAE,CAAC;AAApD,CADa,EAEb;AAAEF,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,GAAG,EAAE,iBAAlC;AAAqDC,EAAAA,GAAG,EAAE,CAAC;AAA3D,CAFa,EAGb;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,GAAG,EAAE,iBAA9B;AAAiDC,EAAAA,GAAG,EAAE,CAAC;AAAvD,CAHa,CAAf;;IAOMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAEP;AAAT,OAAd;AACD;;;6BAEQ;AAAA,UACCO,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,UAAME,KAAK,GAAG,IAAIX,CAAC,CAACY,IAAN,CAAW;AACvBC,QAAAA,OAAO,EAAEZ,QADc;AAEvBa,QAAAA,aAAa,EAAEb,QAFQ;AAGvBc,QAAAA,UAAU,EAAEd,QAHW;AAIvBe,QAAAA,WAAW,EAAE,IAJU;AAKvBC,QAAAA,SAAS,EAAEhB,QALY;AAMvBiB,QAAAA,UAAU,EAAE,IANW;AAOvBC,QAAAA,YAAY,EAAE,IAPS;AAQvBC,QAAAA,QAAQ,EAAE,IAAIpB,CAAC,CAACqB,KAAN,CAAY,GAAZ,EAAiB,GAAjB,CARa;AASvBC,QAAAA,SAAS,EAAE;AATY,OAAX,CAAd;AAWAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,aACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,CAAC,MAAX,CAA7B;AAAiD,QAAA,IAAI,EAAE,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,2EADd;AAEE,QAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKGF,KAAK,CAACgB,GAAN,CAAU,UAAAC,KAAK;AAAA,eACd,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACvB,KAAnB;AAA0B,UAAA,QAAQ,EAAE,CAACuB,KAAK,CAACrB,GAAP,EAAYqB,KAAK,CAACtB,GAAlB,CAApC;AAA4D,UAAA,IAAI,EAAEO,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQe,KAAK,CAACvB,KAAd,CADF,CADc;AAAA,OAAf,CALH,CADF;AAaD;;;;EAvCqBR,S;;AA0CxB,eAAeW,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Mapresult.scss';\nimport {\n  Map, TileLayer, Marker, Popup,\n} from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst iconBase = '/medias/icone-easylunch-orange.png';\n\n// Nous initialisons une liste de marqueurs\nconst restos = [\n  { titre: 'Cromagnon', lat: 44.84328199999999, lon: -0.5813342000000148 },\n  { titre: 'Le resto d\\'Ysis', lat: 44.92419639999999, lon: -0.6231397999999899 },\n  { titre: 'Le monologue', lat: 44.84287820000001, lon: -0.5816670000000386 },\n\n];\n\nclass Mapresult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      liste: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ liste: restos });\n  }\n\n  render() {\n    const { liste } = this.state;\n    const icone = new L.Icon({\n      iconUrl: iconBase,\n      iconRetinaUrl: iconBase,\n      iconAnchor: iconBase,\n      popupAnchor: null,\n      shadowUrl: iconBase,\n      shadowSize: null,\n      shadowAnchor: null,\n      iconSize: new L.Point(100, 100),\n      className: 'leaflet-div-icon',\n    });\n    console.log(icone);\n    return (\n      <Map className=\"Map\" center={[44.8333, -0.5667]} zoom={17}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {liste.map(resto => (\n          <Marker key={resto.titre} position={[resto.lon, resto.lat]} icon={icone}>\n            <Popup>{resto.titre}</Popup>\n          </Marker>\n        ))}\n      </Map>\n    );\n  }\n}\n\nexport default Mapresult;\n"]},"metadata":{},"sourceType":"module"}